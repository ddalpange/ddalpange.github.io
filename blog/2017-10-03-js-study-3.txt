0:[[["",{"children":["blog",{"children":[["slug","2017-10-03-js-study-3","d"],{"children":["__PAGE__?{\"slug\":\"2017-10-03-js-study-3\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"2070","name":"","chunks":["131:131-b649a46ff1b8d8bb","185:app/layout-77153d09ec71e1b8"],"async":false}
4:I{"id":"7131","name":"","chunks":["131:131-b649a46ff1b8d8bb","931:app/page-d55a3db7a3ed8315"],"async":false}
5:I{"id":"830","name":"","chunks":["272:webpack-1b75aaef18416899","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
6:I{"id":"2079","name":"","chunks":["272:webpack-1b75aaef18416899","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
1:[["$","html",null,{"lang":"en","data-theme":"retro","children":[["$","head",null,{"children":["$","link",null,{"rel":"stylesheet","type":"text/css","href":"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/variable/pretendardvariable.css"}]}],["$","body",null,{"className":"flex flex-col items-center h-[100svh]","children":[["$","$L3",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-XR7V7MF96T","strategy":"afterInteractive"}],["$","$L3",null,{"id":"google-analytics","strategy":"afterInteractive","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){window.dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-XR7V7MF96T');\n        "}],["$","div",null,{"className":"w-full max-w-3xl flex-grow","children":[["$","div",null,{"className":"navbar bg-base-100","children":[["$","div",null,{"className":"flex-1","children":["$","$L4",null,{"className":"p-2 hover:underline md:text-2xl font-bold flex gap-4 items-center","href":"/","children":"Yozzing Blog"}]}],["$","div",null,{"className":"flex-none","children":["$","div",null,{"className":"tabs","children":[["$","$L4",null,{"className":"tab","href":"/engineering","children":"엔지니어링"}],["$","$L4",null,{"className":"tab","href":"/essay","children":"에세이"}],["$","a",null,{"className":"tab","href":"https://github.com/ddalpange","children":["$","div",null,{"className":"avatar","children":["$","div",null,{"className":"w-8 rounded-full","children":["$","img",null,{"src":"/blog/images/profile.jpeg"}]}]}]}]]}]}]]}],["$","div",null,{"className":"p-4 pb-10","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","2017-10-03-js-study-3","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L7","$@8"],"segment":"__PAGE__?{\"slug\":\"2017-10-03-js-study-3\"}"}}],"segment":["slug","2017-10-03-js-study-3","d"]}}],"segment":"blog"}}]}]]}]]}]]}],"$@9"]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"자바스크립트 객체 종류"}],["$","meta",null,{"name":"description","content":"<p>자바스크립트의 객체 종류에 대하여 알아보자.</p>\n"}],null,[[["$","link",null,{"rel":"author","href":"https://github.io/ddalpange"}],["$","meta",null,{"name":"author","content":"ddalpange"}]]],null,null,["$","meta",null,{"name":"keywords","content":"Javascript"}],null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
7:["$","article",null,{"className":"prose","children":[["$","h1",null,{"children":"자바스크립트 객체 종류"}],["$","caption",null,{"children":"2017/10/03"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>자바스크립트의 객체 종류에 대하여 알아보자.</p>\n<h2>1. 전역 객체</h2>\n<ul>\n<li>전역 객체(global object)는 매우 중요한 용도로 사용되는 일반적인 자바스크립트 객체이다.</li>\n<li>전역객체의 프로퍼티는 자바스크립트 프로그램 전역에서 사용될수 있게 정의된 심벌이다.</li>\n<li>자바스크립트 인터프리터가 시작할 때 새로운 전역객체를 만들고 또 그 프로퍼티들을 초기화한다.</li>\n<li>undefined, NaN, Date(), RegExp() 등.</li>\n<li>윈도우 프로퍼티는 F12를 누른 후 브라우저 콘솔창에서 다음의 명령어로 확인 가능하다.</li>\n</ul>\n<pre><code>console.log(window);\n</code></pre>\n<ul>\n<li>전역 객체가 생성 될 떄 초기화되는 프로퍼티들은 예약어는 아니지만 예약어처럼 취급된다.</li>\n<li>최상위 코드(함수의 일부가 아닌 코드)에서는 this 키워드를 통해 전역 객체를 참조할 수 있다.</li>\n</ul>\n<pre><code>var global = this;\n</code></pre>\n<h3>윈도우 객체 종류</h3>\n<p><img src=\"/blog/images/windowObj.png\" alt=\"객체\"></p>\n<h3>윈도우 프로퍼티</h3>\n<p><img src=\"/blog/images/windowProp.png\" alt=\"프롭\"></p>\n<h3>윈도우 메소드</h3>\n<p><img src=\"/blog/images/windowMethod.png\" alt=\"메솥\"></p>\n<h3>윈도우 이벤트</h3>\n<p><img src=\"/blog/images/windowEvent.png\" alt=\"이벤\"></p>\n<h2>2. 래퍼(Wrapper) 객체</h2>\n<p><code>1</code>, <code>\"string\"</code>, <code>true</code> 같은 원시 값은 객체가 아니다. 그러므로 프로퍼티(메소드)를 가지고 있지 않다. 그런데 <code>name.length</code>, <code>name.substr(\"2\".\"3\")</code>과 같이 어떻게 프로퍼티(메소드)에 접근하는 것일까??</p>\n<pre><code>var name = \"kim yohan\";\nconsole.log(name.length); // -> new String(name).length\n</code></pre>\n<p>만약 스트링 <code>name</code>의 프로퍼티를 참조할 때 자바스크립트는 문자열 값을 임시 객체로 래핑한다. 프로퍼티 참조가 해제되면 임시 객체는 메모리에서 사라진다. 객체 자체로 선언할 수 있지만, 원시 값(리터럴)으로 선언하는 것과는 엄연히 다르다.</p>\n<pre><code>var name = \"kim yohan\";\nvar name2 = new String(\"kim yohan\");\n\nconsole.log(name === name2) // false\n\nname.job = \"programmer\";\nname2.job = \"programmer\";\n\nconsole.log(name1.nikname);  // undefined\nconsole.log(name2.nikname);  // ddalpange\n</code></pre>\n<blockquote>\n<p><code>name</code>의 임시 객체의 <code>job</code>에 <strong>ddalpange</strong>를 할당하였지만 메모리 할당이 해제됨으로써 프로퍼티가 사라졌다 즉, 문자열, 넘버, 불리언 값의 프로퍼티들은 읽기 전용이며, <code>새로운 프로퍼티를 할당할 수 없다</code>는 것을 알 수 있다.</p>\n</blockquote>\n<h2>3. 변경 불가능한 원시 타입 값과 변경 가능 객체 참조.</h2>\n<ul>\n<li>원시타입은 자체가 값이라 바꿀수가 없다.</li>\n<li>값이 바뀔 필요가 있다면 새로운 값을 생성하여 대체한다.</li>\n</ul>\n<pre><code>var str = \"hello\";\nstr.toUpperCase();\nconsole.log(str); // return \"hello\";\n</code></pre>\n<pre><code>var obj = { x : 1 };\nobj.x = 2;\nconsole.log(obj.x);// return 2\n</code></pre>\n<ul>\n<li>자세한 내용은 <a href=\"https://ddalpange.github.io/2017/10/10/js-clone-object/\">여기</a>를 참조하세요.</li>\n</ul>\n<p>오류가 있거나 궁금하신 사항이 있다면 댓글을 달아주세요.</p>\n"}}]]}]
8:[null,null,[]]
9:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d71785f3ad35c274.css","precedence":"next.js"}]]]
