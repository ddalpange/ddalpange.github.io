0:[[["",{"children":["blog",{"children":[["slug","2017-10-03-project-make-simple-memo-4","d"],{"children":["__PAGE__?{\"slug\":\"2017-10-03-project-make-simple-memo-4\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"2070","name":"","chunks":["131:131-b649a46ff1b8d8bb","185:app/layout-7117d08aaaa65714"],"async":false}
4:I{"id":"7131","name":"","chunks":["131:131-b649a46ff1b8d8bb","931:app/page-1f103c5c36dee5a3"],"async":false}
5:I{"id":"830","name":"","chunks":["272:webpack-2d9ad5e2e62df6f6","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
6:I{"id":"2079","name":"","chunks":["272:webpack-2d9ad5e2e62df6f6","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
1:[["$","html",null,{"lang":"en","data-theme":"retro","children":[["$","head",null,{"children":[["$","link",null,{"rel":"preconnect","href":"https://cdn.jsdelivr.net"}],["$","link",null,{"rel":"stylesheet","type":"text/css","href":"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/variable/pretendardvariable.css"}]]}],["$","body",null,{"className":"flex flex-col items-center h-[100svh]","children":[["$","$L3",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-XR7V7MF96T","strategy":"afterInteractive"}],["$","$L3",null,{"id":"google-analytics","strategy":"afterInteractive","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){window.dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-XR7V7MF96T');\n        "}],["$","div",null,{"className":"w-full max-w-3xl flex-grow","children":[["$","div",null,{"className":"navbar","children":[["$","div",null,{"className":"flex-1","children":["$","$L4",null,{"className":"p-2 hover:underline md:text-2xl font-bold flex gap-4 items-center","href":"/","children":"Yozzing Blog"}]}],["$","div",null,{"className":"flex-none","children":["$","div",null,{"className":"tabs","children":[["$","$L4",null,{"className":"tab","href":"/engineering","children":"Engineering"}],["$","$L4",null,{"className":"tab","href":"/essay","children":"Essay"}],["$","a",null,{"className":"tab","href":"https://github.com/ddalpange","children":["$","div",null,{"className":"avatar","children":["$","div",null,{"className":"w-8 rounded-full","children":["$","img",null,{"src":"/blog/images/profile.jpeg"}]}]}]}]]}]}]]}],["$","div",null,{"className":"p-4 pb-10","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","2017-10-03-project-make-simple-memo-4","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L7","$@8"],"segment":"__PAGE__?{\"slug\":\"2017-10-03-project-make-simple-memo-4\"}"}}],"segment":["slug","2017-10-03-project-make-simple-memo-4","d"]}}],"segment":"blog"}}]}]]}]]}]]}],"$@9"]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"간단한 메모장 만들기 4 - Auth"}],["$","meta",null,{"name":"description","content":"<p>이번시간에는 파이어베이스를 이용한 로그인 연동, 회원가입, 로그아웃을 해보겠습니다.</p>\n"}],null,[[["$","link",null,{"rel":"author","href":"https://github.io/ddalpange"}],["$","meta",null,{"name":"author","content":"ddalpange"}]]],null,null,["$","meta",null,{"name":"keywords","content":"Javascript,Angular,Ionic,SimpleMemo"}],null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
7:["$","article",null,{"className":"prose max-w-full flex flex-col items-center","children":[["$","span",null,{"className":"mb-2","children":"over 5 years ago"}],["$","h1",null,{"children":"간단한 메모장 만들기 4 - Auth"}],["$","div",null,{"children":["$","div",null,{"className":"prose self-center","children":[["$","p","0",{"children":"이번시간에는 파이어베이스를 이용한 로그인 연동, 회원가입, 로그아웃을 해보겠습니다."}],"\n",["$","p","2",{"children":"https://console.firebase.google.com"}],"\n",["$","p","4",{"children":["$","img",null,{"src":"/blog/images/firebaseConsole.png","alt":"프로젝트 추가 버튼을 클릭하세요","children":null}]}],"\n",["$","p","6",{"children":["해당 프로젝트로 들어가시면 정 가운데 세번째 버튼에 ",["$","strong","1",{"children":"웹 앱으로 배포하기"}],"라는 버튼이 있을겁니다. 클릭해주세요."]}],"\n",["$","pre","8",{"children":["$","code",null,{"children":"<script src=\"https://www.gstatic.com/firebasejs/4.1.3/firebase.js\"></script>\n<script>\n  // Initialize Firebase\n  var config = {\n    apiKey: \"YOUR_API_KEY\",\n    authDomain: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.firebaseapp.com\",\n    databaseURL: \"https://YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.firebaseio.com\",\n    projectId: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER\",\n    storageBucket: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.appspot.com\",\n    messagingSenderId: \"12345678\"\n  };\n  firebase.initializeApp(config);\n</script>\n"}]}],"\n",["$","p","10",{"children":"config 변수 부분을 복사해주세요 딴건 필요없답니다."}],"\n",["$","h3","12",{"children":"아이오닉 프로젝트에 추가하기"}],"\n",["$","p","14",{"children":"Ionic에서 지원하는 파이어베이스 패키지들을 인스톨하여주세요."}],"\n",["$","pre","16",{"children":["$","code",null,{"children":"npm install --save angularfire2 firebase\n"}]}],"\n",["$","p","18",{"children":"그 다음에 루트 모듈 ( 보통은 app.module.ts )에 파이어베이스 모듈을 추가할게요."}],"\n",["$","p","20",{"children":"변경 후"}],"\n",["$","pre","22",{"children":["$","code",null,{"children":"...\n\nimport { AngularFireModule } from 'angularfire2'; // 파이어베이스 루트 모듈입니다.\nimport { AngularFireDatabaseModule } from 'angularfire2/database'; // 파이어베이스 데이터베이스 모듈입니다.\nimport { AngularFireAuthModule } from 'angularfire2/auth'; // 파이버베이스 인증 모듈입니다.\n\n...\n\n// 방금 복사했던 config를 가져오시면 됩니다.\nexport const firebaseConfig = {\n  apiKey: \"YOUR_API_KEY\",\n  authDomain: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.firebaseapp.com\",\n  databaseURL: \"https://YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.firebaseio.com\",\n  projectId: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER\",\n  storageBucket: \"YOUR_PROJECT_NAME-YOUR_PROJCET_NUMBER.appspot.com\",\n  messagingSenderId: \"12345678\"\n};\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [Http]\n      }\n    }),\n    IonicModule.forRoot(AppComponent, {\n      preloadModules: true\n    }),\n    IonicStorageModule.forRoot(),\n    // 설정파일을 인자로 넘겨주어 앱을 초기화합니다.\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    ...\n  ],\n  entryComponents: [AppComponent],\n  bootstrap: [IonicApp],\n  providers: []\n})\nexport class AppModule { }\n\n"}]}],"\n",["$","h3","24",{"children":"로그인 서비스 활성화시키기"}],"\n",["$","p","26",{"children":"파이어베이스에 들어가신 후"}],"\n",["$","p","28",{"children":[["$","strong","0",{"children":"Authentication"}]," -> ",["$","strong","2",{"children":"로그인 방법"}],"을 클릭하신 후"]}],"\n",["$","p","30",{"children":"이메일 로그인 방식과 페이스북 로그인 방식을 활성화해주세요"}],"\n",["$","p","32",{"children":["$","img",null,{"src":"/blog/images/memo/auth-open.png","alt":"인증서비스","children":null}]}],"\n",["$","h3","34",{"children":"인증 서비스파일 만들기."}],"\n",["$","pre","36",{"children":["$","code",null,{"children":"$$ ionic g provider auth-manager\n"}]}],"\n",["$","p","38",{"children":["$","strong",null,{"children":"src/pages/memo-manager/memo-manager.ts"}]}],"\n",["$","pre","40",{"children":["$","code",null,{"children":"import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs/Observable';\nimport * as firebase from 'firebase/app';\n\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AuthManagerProvider {\n\n  userInfo: firebase.User = null;\n  authState: Observable<firebase.User>\n\n  constructor(\n    public http: Http, \n    public afAuth: AngularFireAuth) {\n    this.initAuth();\n  }\n\n  initAuth() {\n    this.authState = this.afAuth.authState;\n    this.authState.subscribe(\n      (user: firebase.User) => {\n        if(user) {\n          this.setUserInfo(user);\n        } else {\n          this.setUserInfo(null);\n        }\n      }\n    )\n  }\n\n  getAuthState(): Observable<firebase.User> {\n    return this.authState;\n  }\n\n  getUserInfo() {\n    return this.userInfo;\n  }\n\n  setUserInfo(userInfo: firebase.User) {\n    this.userInfo = userInfo;\n  }\n\n  loginUser(email: string, password: string) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  signUpUser(email: string, password: string) {\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  resetPassword(email: string) {\n    return this.afAuth.auth.sendPasswordResetEmail(email);\n  }\n\n  logoutUser() {\n    return this.afAuth.auth.signOut();\n  }\n}\n"}]}],"\n",["$","h3","42",{"children":"로그인상태 여부에따라 최초 로딩페이지 바꿔주기"}],"\n",["$","p","44",{"children":["$","strong",null,{"children":"src/app/app/component.ts"}]}],"\n",["$","pre","46",{"children":["$","code",null,{"children":"import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AuthManagerProvider } from './../providers/auth-manager/auth-manager';\n\nimport { SignInPage } from './../pages/sign-in/sign-in';\nimport { MemoListPage } from './../pages/memo-list/memo-list';\n\n@Component({\n  templateUrl: 'app.html'\n})\n\nexport class MyApp {\n  rootPage:any;\n\n  constructor(\n    platform: Platform, \n    statusBar: StatusBar, \n    splashScreen: SplashScreen,\n    authManager: AuthManagerProvider,\n  ) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n    authManager.getAuthState().subscribe((user => {\n      if(user)\n        this.rootPage = MemoListPage;\n      else \n        this.rootPage = SignInPage;\n    }));\n  }  \n}\n"}]}],"\n",["$","p","48",{"children":["이제 ",["$","strong","1",{"children":"로그인"}],", ",["$","strong","3",{"children":"회원가입"}],", ",["$","strong","5",{"children":"로그아웃만 구현하면 됩니다."}]]}],"\n",["$","h3","50",{"children":"회원가입 페이지"}],"\n",["$","p","52",{"children":["$","strong",null,{"children":"src/pages/sign-up/sign-up.module.ts"}]}],"\n",["$","pre","54",{"children":["$","code",null,{"children":"import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignUpPage } from './sign-up';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SignUpPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignUpPage),\n    FormsModule\n  ],\n  exports: [\n    SignUpPage\n  ]\n})\nexport class SignUpPageModule {}\n\n"}]}],"\n",["$","p","56",{"children":["$","strong",null,{"children":"src/pages/sign-up/sign-up.ts"}]}],"\n",["$","pre","58",{"children":["$","code",null,{"children":"import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthManagerProvider } from '../../providers/auth-manager/auth-manager';\nimport { LoadingController, AlertController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-sign-up',\n  templateUrl: 'sign-up.html',\n})\nexport class SignUpPage {\n\n  emailAddress: string = '';\n  password: string = '';\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public authManager: AuthManagerProvider,\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n  ) {\n  }\n  \n  onClickDDalpange() {\n    window.location.href = \"https://ddalpange.github.io\";\n  }\n  \n  onClickSignUp() {\n    let loader = this.loadingCtrl.create({\n      content: '회원가입 중입니다 ..'\n    });\n    loader.present();\n \n    this.authManager.signUpUser(this.emailAddress, this.password)\n    .then(user => {\n      console.log('성공!', user);\n      loader.dismiss();\n      const alert = this.getSuccessAlert();\n      alert.present();\n    })\n    .catch(err => { \n      loader.dismiss();\n      const alert = this.getFailAlert(err.message);\n      alert.present();\n    });\n  }\n\n  getSuccessAlert() {\n    return this.alertCtrl.create({\n      title: 'success!!',\n      subTitle: '회원가입에 성공하였습니다.',\n      buttons: [{\n        text: '확인',\n      }]\n    });\n  }\n\n  getFailAlert(message: string) {\n    return this.alertCtrl.create({\n      title: 'failed..',\n      subTitle: message,\n      buttons: [{\n        text: '확인'\n      }]\n    });\n  }\n  \n  onClickNavBack() {\n    this.navCtrl.pop();\n  }\n}\n"}]}],"\n",["$","p","60",{"children":["$","strong",null,{"children":"src/pages/sign-up/sign-up.html"}]}],"\n",["$","pre","62",{"children":["$","code",null,{"children":"<ion-content padding>\n   <div class=\"image-wrap\">\n    <img src=\"/images/gyul.png\" \n      (click)=\"onClickDDalpange()\"/>\n    <p>달팽이의 메모 앱</p>\n    <ion-list>\n      <ion-item>\n        <ion-input type=\"email\" placeholder=\"이메일\" [(ngModel)]=\"emailAddress\" (keyup.enter)=\"onClickSignUp()\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-input type=\"password\" placeholder=\"비밀번호\" [(ngModel)]=\"password\" (keyup.enter)=\"onClickSignUp()\"></ion-input>\n      </ion-item>\n    </ion-list>\n  </div>\n  <button ion-button block color=\"light\" (click)=\"onClickSignUp()\">가입하기</button>\n  <button ion-button block color=\"danger\" (click)=\"onClickNavBack()\">뒤로가기</button>\n</ion-content>\n"}]}],"\n",["$","h3","64",{"children":"로그인 페이지"}],"\n",["$","p","66",{"children":["$","strong",null,{"children":"src/pages/sign-in/sign-in.module.ts"}]}],"\n",["$","pre","68",{"children":["$","code",null,{"children":"import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SignInPage } from './sign-in';\n\n@NgModule({\n  declarations: [\n    SignInPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SignInPage),\n    FormsModule\n    \n  ],\n  exports: [\n    SignInPage\n  ]\n})\nexport class SignInPageModule {}\n\n"}]}],"\n",["$","p","70",{"children":["$","strong",null,{"children":"src/pages/sign-in/sign-in.ts"}]}],"\n",["$","pre","72",{"children":["$","code",null,{"children":"import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController, LoadingController } from 'ionic-angular';\n\nimport { SignUpPage } from './../sign-up/sign-up';\nimport { MemoListPage } from './../memo-list/memo-list';\nimport { AuthManagerProvider } from '../../providers/auth-manager/auth-manager';\n\n@IonicPage()\n@Component({\n  selector: 'page-sign-in',\n  templateUrl: 'sign-in.html',\n})\n\nexport class SignInPage {\n  \n  emailAddress: string = '';\n  password: string = '';\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    public authManager: AuthManagerProvider\n  ) {}\n\n  onClickDDalpange() {\n    window.location.href = \"https://ddalpange.github.io\";\n  }\n\n  onClickEmailLogIn() {\n    let loader = this.loadingCtrl.create({\n      content: '로그인 중입니다 ..'\n    });\n\n    loader.present();\n\n    this.authManager.loginUser(this.emailAddress, this.password)\n      .then(user => {\n      console.log('성공!', user);\n      loader.dismiss();\n      this.navCtrl.setRoot(MemoListPage);\n    })\n    .catch(err => { \n      console.error('실패!', err);\n      loader.dismiss();\n      const alert = this.getFailAlert(err.message);\n      alert.present();\n    });;\n  }\n\n  onClickFacebookLogin() {\n    const alert = this.getFailAlert('미완성 기능입니다.');\n    alert.present();\n  }\n\n  getFailAlert(message: string) {\n    return this.alertCtrl.create({\n      title: 'failed..',\n      subTitle: message,\n      buttons: [{\n        text: '확인'\n      }]\n    });\n  }\n\n  onClickSignUp() {\n    this.navCtrl.push(SignUpPage);\n  }\n}\n"}]}],"\n",["$","p","74",{"children":["$","strong",null,{"children":"src/pages/sign-in/sign-in.html"}]}],"\n",["$","pre","76",{"children":["$","code",null,{"children":"<ion-content padding>\n  <div class=\"image-wrap\">\n    <img src=\"/images/gyul.png\" \n      (click)=\"onClickDDalpange()\"/>\n    <p>달팽이의 메모 앱</p>\n    <ion-list>\n      <ion-item>\n        <ion-input type=\"email\" placeholder=\"이메일\" [(ngModel)]=\"emailAddress\" (keyup.enter)=\"onClickEmailLogIn()\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-input type=\"password\" placeholder=\"비밀번호\" [(ngModel)]=\"password\" (keyup.enter)=\"onClickEmailLogIn()\"></ion-input>\n      </ion-item>\n    </ion-list>\n  </div>\n  <button ion-button block color=\"light\" (click)=\"onClickEmailLogIn()\">이메일 로그인</button>\n  <button ion-button block color=\"primary\" (click)=\"onClickFacebookLogin()\">페이스북 로그인</button>\n  <p class=\"sign-up-text\" (click)=\"onClickSignUp()\">계정이 없으신가요?</p>\n</ion-content>\n"}]}],"\n",["$","h3","78",{"children":"로그아웃 기능(리스트 페이지)"}],"\n",["$","p","80",{"children":["$","strong",null,{"children":"src/pages/memo-list/memo-list.module.ts"}]}],"\n",["$","pre","82",{"children":["$","code",null,{"children":"import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MemoListPage } from './memo-list';\n\n@NgModule({\n  declarations: [\n    MemoListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MemoListPage),\n    FormsModule\n  ],\n  exports: [\n    MemoListPage\n  ]\n})\nexport class MemoListPageModule {}\n"}]}],"\n",["$","p","84",{"children":["$","strong",null,{"children":"src/pages/memo-list/memo-list.ts"}]}],"\n",["$","pre","86",{"children":["$","code",null,{"children":"import { AuthManagerProvider } from './../../providers/auth-manager/auth-manager';\nimport { FirebaseListObservable } from 'angularfire2/database';\nimport { Memo } from './../../models/memo/memo.interface';\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, ActionSheetController } from 'ionic-angular';\n\nimport { MemoCreatePage } from './../memo-create/memo-create';\nimport { MemoDetailPage } from './../memo-detail/memo-detail';\n\nimport { MemoManagerProvider } from './../../providers/memo-manager/memo-manager';\n@IonicPage()\n\n@Component({\n  selector: 'page-memo-list',\n  templateUrl: 'memo-list.html',\n})\n\nexport class MemoListPage {\n\n  searchKeyword: string = '';\n  memoList: Memo = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public loadingCtrl: LoadingController,\n    public actionSheetCtrl: ActionSheetController,\n    public authManager: AuthManagerProvider,\n    public memoManager: MemoManagerProvider) {\n  }\n \n  ngOnInit() {\n    this.memoList = this.memoManager.getMemoList();\n  }\n\n  filterMemo(memo: Memo): boolean {\n    return memo.title.includes(this.searchKeyword) || memo.title.includes(this.searchKeyword);\n  }\n\n  onClickViewMemoDetail(memo: Memo) {\n    this.navCtrl.push(MemoDetailPage, { memo: memo });\n  }\n  \n  onClickCreateMemo() {\n    this.navCtrl.push(MemoCreatePage);\n  }\n\n  onClickMoreOption() {\n    const actionSheet = this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: 'Logout',\n          role: 'destructive',\n          handler: () => {\n            this.authManager.logoutUser();\n          }\n        }, {\n          text: 'Cancel',\n          role: 'cancel'\n        }\n      ]\n    });\n    actionSheet.present();\n  }\n}\n"}]}],"\n",["$","p","88",{"children":["$","strong",null,{"children":"src/pages/memo-list/memo-list.html"}]}],"\n",["$","pre","90",{"children":["$","code",null,{"children":"<ion-header>\n  <ion-navbar color=\"primary\">\n    <ion-searchbar [(ngModel)]=\"searchKeyword\"></ion-searchbar>\n    <ion-buttons end>\n      <button ion-button icon-only (click)=\"onClickMoreOption()\">\n        <ion-icon name=\"more\">\n        </ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n<!-- 콘텐츠 내용... -->\n"}]}],"\n",["$","p","92",{"children":"로그인, 로그아웃, 회원가입 총 3가지 기능을 완성하였습니다."}],"\n",["$","p","94",{"children":"다음 포스트 에서는 파이어베이스의 리얼타임 데이터베이스를 이용해 데이터를 관리해볼게요!"}],"\n",["$","hr","96",{"children":null}],"\n",["$","p","98",{"children":"참고 링크"}],"\n",["$","ul","100",{"children":["\n",["$","li","1",{"children":["$","a",null,{"href":"https://github.com/ddalpange/simple-memo","children":"해당 포스트에 작성된 모든 코드는 여기에 있습니다!"}]}],"\n",["$","li","3",{"children":["$","a",null,{"href":"https://memo-28314.firebaseapp.com","children":"해당 프로젝트는 여기서 볼 수 있습니다 !!"}]}],"\n"]}],"\n"]}]}]]}]
8:[null,null,[]]
9:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c6b1e47f9d5235e8.css","precedence":"next.js"}]]]
