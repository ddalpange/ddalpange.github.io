0:[[["",{"children":["blog",{"children":[["slug","2017-10-03-js-import-export","d"],{"children":["__PAGE__?{\"slug\":\"2017-10-03-js-import-export\"}",{}]}]}]},"$undefined","$undefined",true],"$L1","$L2"]]
3:I{"id":"2070","name":"","chunks":["131:131-b649a46ff1b8d8bb","185:app/layout-8083bdbad8f07641"],"async":false}
4:I{"id":"7131","name":"","chunks":["131:131-b649a46ff1b8d8bb","179:app/essay/page-803925d136c9d05d"],"async":false}
5:I{"id":"830","name":"","chunks":["272:webpack-b1abe5c771310ce9","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
6:I{"id":"2079","name":"","chunks":["272:webpack-b1abe5c771310ce9","776:0b7c6ed9-5895ea2b955a8219","474:474-2bfbc4a0bef14471"],"async":false}
1:[["$","html",null,{"lang":"en","data-theme":"retro","children":["$","body",null,{"className":"flex flex-col items-center h-[100svh]","children":[["$","$L3",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-XR7V7MF96T","strategy":"afterInteractive"}],["$","$L3",null,{"id":"google-analytics","strategy":"afterInteractive","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){window.dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-XR7V7MF96T');\n        "}],["$","div",null,{"className":"w-full max-w-3xl flex-grow","children":[["$","div",null,{"className":"navbar bg-base-100","children":[["$","div",null,{"className":"flex-1","children":["$","$L4",null,{"className":"p-2 hover:underline md:text-2xl font-bold flex gap-4 items-center","href":"/","children":"Yozzing Blog"}]}],["$","div",null,{"className":"flex-none","children":["$","div",null,{"className":"tabs","children":[["$","$L4",null,{"className":"tab","href":"/engineering","children":"엔지니어링"}],["$","$L4",null,{"className":"tab","href":"/essay","children":"에세이"}],["$","a",null,{"className":"tab","href":"https://github.com/ddalpange","children":["$","div",null,{"className":"avatar","children":["$","div",null,{"className":"w-8 rounded-full","children":["$","img",null,{"src":"/blog/images/profile.jpeg"}]}]}]}]]}]}]]}],["$","div",null,{"className":"p-4 pb-10","children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","2017-10-03-js-import-export","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L6",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":false,"childProp":{"current":["$L7","$@8"],"segment":"__PAGE__?{\"slug\":\"2017-10-03-js-import-export\"}"}}],"segment":["slug","2017-10-03-js-import-export","d"]}}],"segment":"blog"}}]}]]}]]}]}],"$@9"]
2:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"임포트와 익스포트"}],["$","meta",null,{"name":"description","content":"<p>자바스크립트 프로젝에서 상수를 관리하기 위한 방법을 설명하는 글.</p>\n"}],null,[[["$","link",null,{"rel":"author","href":"https://github.io/ddalpange"}],["$","meta",null,{"name":"author","content":"ddalpange"}]]],null,null,["$","meta",null,{"name":"keywords","content":"Javascript"}],null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
7:["$","article",null,{"className":"prose","children":[["$","h1",null,{"children":"임포트와 익스포트"}],["$","caption",null,{"children":"2017/10/03"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"<p>자바스크립트 프로젝에서 상수를 관리하기 위한 방법을 설명하는 글.</p>\n<h3>Import, Export</h3>\n<p>기존 프로젝트 유지보수를 진행하다 보면 \"AS20342\"과 같은 특정한 코드값들이 있다. 그러한 코드값들은 전부 공통으로 모아 상수로 빼는게 상책인데, import, export를 어떻게 해야할지 감이 오질 않았다. 아래 내용은 공통함수를 뺄때까지의 과정이다.</p>\n<h4>1. Obejct형태로 Export한다.</h4>\n<pre><code>const obj = {\n  name: \"ddalpange\",\n  password: 123456\n}\n\nexport default obj;\n</code></pre>\n<p>-> 나쁘지 않은 방법이다. 하지만 오브젝트를 const로 선언한다면 오브젝트의 프로퍼티 값은 const가 아니기 때문에 obj.name  = \"puppy\"와 같이 값 자체를 바꿀 수 있다. 엄밀히 따지자면 상수가 아닌 셈이다. (Object.freeze()라는 것을 사용하면 될 수도 ??)</p>\n<h4>2. Class 형태로 Export한다.</h4>\n<pre><code>class test {\n  init() {\n    this.obj = { \"name\" : \"ddalpange\"}\n  };\n  getName(keyName) {\n    if(this.obj.hasOwnProperty(keyName) {\n      this.obj[keyName];\n    } else {\n      return null;\n    }\n  }\n}\n</code></pre>\n<p>-> 이상하다. 그저 변수 하나를 뺴기 위하여 클래스를 선언한다는 것은 값어치가 없는 일이다.</p>\n<h4>3. const 선언을 할 떄 마다 export를 붙여준다.</h4>\n<pre><code>export const a = \"1\";\nexport const b = \"2\";\nexport const c = \"3\";\n</code></pre>\n<p>-> 이 방법이 제일 좋은 방법인 것 같다. 하지만 위의 방법으로 Export하여 사용할려면 Import의 방식이 다르다.</p>\n<pre><code>Import * as test from {SRC}\n</code></pre>\n<p>위와 같이 Import하면 test.a, test.b 와 같이 접근할 수 있다.</p>\n<p>test라는 오브젝트의 프로퍼티에 접근한다고 생각하면 쉬울 듯 하다 :)</p>\n<p>별것 아닌것 같아 보이지만 찾느라 고생을 많이 한 것 같다.</p>\n<p>프로젝트 폴더구조가 알아보기 쉽지않고, import, export 경로 찾기도 매우 어려운데</p>\n<p>나중에 폴더마다 index.js를 만들어 import하기 쉽게 만들어야겠다.</p>\n"}}]]}]
8:[null,null,[]]
9:[null,null,[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6aab0c2b0a3a27f2.css","precedence":"next.js"}]]]
