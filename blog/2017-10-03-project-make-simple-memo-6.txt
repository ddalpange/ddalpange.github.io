1:HL["/_next/static/css/3127ef311b686118.css",{"as":"style"}]
0:[[["",{"children":["blog",{"children":[["slug","2017-10-03-project-make-simple-memo-6","d"],{"children":["__PAGE__?{\"slug\":\"2017-10-03-project-make-simple-memo-6\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3127ef311b686118.css","precedence":"next"}]],["$L3",null]]]]
4:I{"id":"8717","chunks":["146:static/chunks/146-0b9edffcecace5b8.js","185:static/chunks/app/layout-588365b8ca87dbfe.js"],"name":"","async":false}
5:I{"id":"3146","chunks":["146:static/chunks/146-0b9edffcecace5b8.js","179:static/chunks/app/essay/page-692c51b8a8fdf410.js"],"name":"","async":false}
6:I{"id":"9082","chunks":["272:static/chunks/webpack-a84c954fa8715833.js","763:static/chunks/3545d7d3-1319cab7d7f01495.js","895:static/chunks/895-890d488364659f80.js"],"name":"","async":false}
7:I{"id":"4127","chunks":["272:static/chunks/webpack-a84c954fa8715833.js","763:static/chunks/3545d7d3-1319cab7d7f01495.js","895:static/chunks/895-890d488364659f80.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","data-theme":"retro","children":[["$","head",null,{"children":[["$","link",null,{"rel":"preconnect","href":"https://cdn.jsdelivr.net"}],["$","link",null,{"rel":"stylesheet","type":"text/css","href":"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/variable/pretendardvariable.css"}]]}],["$","body",null,{"className":"flex flex-col items-center h-[100svh]","children":[["$","$L4",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-XR7V7MF96T","strategy":"afterInteractive"}],["$","$L4",null,{"id":"google-analytics","strategy":"afterInteractive","children":"\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){window.dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-XR7V7MF96T');\n        "}],["$","div",null,{"className":"w-full max-w-3xl flex-grow","children":[["$","div",null,{"className":"navbar","children":[["$","div",null,{"className":"flex-1","children":["$","$L5",null,{"className":"p-2 hover:underline md:text-2xl font-bold flex gap-4 items-center","href":"/","children":"Yozzing Blog"}]}],["$","div",null,{"className":"flex-none","children":["$","div",null,{"className":"tabs","children":[["$","$L5",null,{"className":"tab","href":"/engineering","children":"Engineering"}],["$","$L5",null,{"className":"tab","href":"/essay","children":"Essay"}],["$","a",null,{"className":"tab","href":"https://github.com/ddalpange","children":["$","div",null,{"className":"avatar","children":["$","div",null,{"className":"w-8 rounded-full","children":["$","img",null,{"alt":"yozzing","src":"/blog/images/profile.jpeg"}]}]}]}]]}]}]]}],["$","div",null,{"className":"p-4 pb-10","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","2017-10-03-project-make-simple-memo-6","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$L8",null],"segment":"__PAGE__?{\"slug\":\"2017-10-03-project-make-simple-memo-6\"}"},"styles":[]}],"segment":["slug","2017-10-03-project-make-simple-memo-6","d"]},"styles":[]}],"segment":"blog"},"styles":[]}]}]]}]]}]]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"간단한 메모장 만들기 6 - 무한 스크롤 적용"}],["$","meta",null,{"name":"description","content":"<p>이번시간에는 아이오닉에서 제공해주는 무한 스크롤(infinite scroll)을 적용해볼거에요!!</p>\n"}],null,[[["$","link",null,{"rel":"author","href":"https://github.io/ddalpange"}],["$","meta",null,{"name":"author","content":"ddalpange"}]]],null,null,["$","meta",null,{"name":"keywords","content":"Javascript,Angular,Ionic,SimpleMemo"}],null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,null]
9:I{"id":"9432","chunks":["308:static/chunks/app/blog/[slug]/page-c76664ffa773d92a.js"],"name":"Disqus","async":false}
8:["$","article",null,{"className":"prose max-w-full flex flex-col items-center","children":[["$","span",null,{"className":"mb-2","children":"5년 이상 전"}],["$","h1",null,{"children":"간단한 메모장 만들기 6 - 무한 스크롤 적용"}],["$","div",null,{"children":["$","div",null,{"className":"prose self-center","children":[["$","p","0",{"children":"이번시간에는 아이오닉에서 제공해주는 무한 스크롤(infinite scroll)을 적용해볼거에요!!"}],"\n",["$","h3","2",{"children":"테스트 환경 작성"}],"\n",["$","p","4",{"children":["테스트케이스 작성을 위해서 아래 코드를 ",["$","strong","1",{"children":"메모리스트"}]," 페이지의 ",["$","strong","3",{"children":"ngOnInit"}]," 생명주기 메서드의 아래의 코드를 작성한 후 새로고침해주세요."]}],"\n",["$","pre","6",{"children":["$","code",null,{"children":"for (let i = 0; i < 5000; i++) {\n  this.memoManager.createMemo(`제목${i.toString()}`, `내용${i.toString}`)\n}\n"}]}],"\n",["$","p","8",{"children":"5000개가 넘어가면 메모리스트 페이지가 많이 느려지는걸 볼 수 있습니다.\n텍스트만 있어도 느린데 이미지가 있는 페이지라면 어느정도일지 짐작이 되시겠죠?"}],"\n",["$","h3","10",{"children":"코드 작성"}],"\n",["$","pre","12",{"children":["$","code",null,{"children":"<ion-header>\n  <ion-navbar color=\"primary\">\n    <ion-searchbar [(ngModel)]=\"searchKeyword\"></ion-searchbar>\n    <ion-buttons end>\n      <button ion-button icon-only (click)=\"onClickMoreOption()\">\n        <ion-icon name=\"more\"> </ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n<ion-content>\n  <ng-template\n    ngFor\n    let-memo\n    [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n    let-i=\"index\"\n  >\n    <ion-card (click)=\"onClickViewMemoDetail(memo)\" *ngIf=\"filterMemo(memo)\">\n      <ion-card-header> {{ memo.title }} </ion-card-header>\n      <ion-card-content> {{ memo.contents }} </ion-card-content>\n    </ion-card>\n  </ng-template>\n  <ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"bubbles\"\n      loadingText=\"please waite...\"\n    ></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n  <ion-fab right bottom>\n    <button ion-fab icon-only (click)=\"onClickCreateMemo()\">\n      <ion-icon name=\"add\" big></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n"}]}],"\n",["$","p","14",{"children":"전체 코드입니다."}],"\n",["$","pre","16",{"children":["$","code",null,{"children":"<ng-template\n  ngFor\n  let-memo\n  [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n  let-i=\"index\"\n>\n  ...\n</ng-template>\n\n<ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n  ...\n  <ion-infinite-scroll></ion-infinite-scroll\n></ion-infinite-scroll>\n"}]}],"\n",["$","p","18",{"children":[["$","strong","0",{"children":"ionInfinite"}],"에 주목하세요. ion-infinite-scroll 태그가 화면상에 보일경우 등록해놓은 ",["$","strong","2",{"children":"doInfinite"}]," 함수를 호출합니다."]}],"\n",["$","pre","20",{"children":["$","code",null,{"children":"import { AuthManagerProvider } from \"./../../providers/auth-manager/auth-manager\"\nimport { FirebaseListObservable } from \"angularfire2/database\"\nimport { Memo } from \"./../../models/memo/memo.interface\"\nimport { Component, OnInit } from \"@angular/core\"\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  LoadingController,\n  ActionSheetController,\n} from \"ionic-angular\"\n\nimport { MemoCreatePage } from \"./../memo-create/memo-create\"\nimport { MemoDetailPage } from \"./../memo-detail/memo-detail\"\n\nimport { MemoManagerProvider } from \"./../../providers/memo-manager/memo-manager\"\n@IonicPage()\n@Component({\n  selector: \"page-memo-list\",\n  templateUrl: \"memo-list.html\",\n})\nexport class MemoListPage {\n  searchKeyword: string = \"\"\n  viewCount: number = 10\n  memoList: FirebaseListObservable<Memo>\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public loadingCtrl: LoadingController,\n    public actionSheetCtrl: ActionSheetController,\n    public authManager: AuthManagerProvider,\n    public memoManager: MemoManagerProvider\n  ) {}\n\n  ngOnInit() {\n    this.memoList = this.memoManager.getMemoList()\n  }\n\n  doInfinite(infiniteScroll: any) {\n    window.setTimeout(() => {\n      this.viewCount += this.viewCount\n      infiniteScroll.complete()\n    }, 500)\n  }\n\n  filterMemo(memo: Memo): boolean {\n    return (\n      memo.title.includes(this.searchKeyword) ||\n      memo.title.includes(this.searchKeyword)\n    )\n  }\n\n  onClickViewMemoDetail(memo: Memo) {\n    this.navCtrl.push(MemoDetailPage, { memo: memo })\n  }\n\n  onClickCreateMemo() {\n    this.navCtrl.push(MemoCreatePage)\n  }\n\n  onClickMoreOption() {\n    const actionSheet = this.getMoreOptionActionSheet()\n    actionSheet.present()\n  }\n\n  getMoreOptionActionSheet() {\n    return this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: \"Logout\",\n          role: \"destructive\",\n          handler: () => {\n            this.authManager.logoutUser()\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n      ],\n    })\n  }\n}\n"}]}],"\n",["$","p","22",{"children":"별거없죠? slice할 viewCount를 증가시켜주고, infiniteScroll 이벤트를 종료합니다."}],"\n",["$","hr","24",{"children":null}],"\n",["$","p","26",{"children":"참고 링크"}],"\n",["$","ul","28",{"children":["\n",["$","li","1",{"children":["$","a",null,{"href":"https://github.com/ddalpange/simple-memo","children":"해당 포스트에 작성된 모든 코드는 여기에 있습니다!"}]}],"\n",["$","li","3",{"children":["$","a",null,{"href":"https://memo-28314.firebaseapp.com","children":"해당 프로젝트는 여기서 볼 수 있습니다 !!"}]}],"\n"]}],"\n"]}]}],["$","$L9",null,{"post":{"title":"간단한 메모장 만들기 6 - 무한 스크롤 적용","date":"2017-10-03T22:49:05.000Z","thumbnail":"/blog/images/memo/memoBanner.png","banner":"/blog/images/memo/memoBanner.png","toc":true,"categories":["SimpleMemo"],"tags":["Javascript","Angular","Ionic","SimpleMemo"],"content":"\n이번시간에는 아이오닉에서 제공해주는 무한 스크롤(infinite scroll)을 적용해볼거에요!!\n\n<!-- more -->\n\n### 테스트 환경 작성\n\n테스트케이스 작성을 위해서 아래 코드를 **메모리스트** 페이지의 **ngOnInit** 생명주기 메서드의 아래의 코드를 작성한 후 새로고침해주세요.\n\n```typescript\nfor (let i = 0; i < 5000; i++) {\n  this.memoManager.createMemo(`제목${i.toString()}`, `내용${i.toString}`)\n}\n```\n\n5000개가 넘어가면 메모리스트 페이지가 많이 느려지는걸 볼 수 있습니다.\n텍스트만 있어도 느린데 이미지가 있는 페이지라면 어느정도일지 짐작이 되시겠죠?\n\n### 코드 작성\n\n```html src/pages/memo-list/memo-list/html\n<ion-header>\n  <ion-navbar color=\"primary\">\n    <ion-searchbar [(ngModel)]=\"searchKeyword\"></ion-searchbar>\n    <ion-buttons end>\n      <button ion-button icon-only (click)=\"onClickMoreOption()\">\n        <ion-icon name=\"more\"> </ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n<ion-content>\n  <ng-template\n    ngFor\n    let-memo\n    [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n    let-i=\"index\"\n  >\n    <ion-card (click)=\"onClickViewMemoDetail(memo)\" *ngIf=\"filterMemo(memo)\">\n      <ion-card-header> {{ memo.title }} </ion-card-header>\n      <ion-card-content> {{ memo.contents }} </ion-card-content>\n    </ion-card>\n  </ng-template>\n  <ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n    <ion-infinite-scroll-content\n      loadingSpinner=\"bubbles\"\n      loadingText=\"please waite...\"\n    ></ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n  <ion-fab right bottom>\n    <button ion-fab icon-only (click)=\"onClickCreateMemo()\">\n      <ion-icon name=\"add\" big></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n```\n\n전체 코드입니다.\n\n```html\n<ng-template\n  ngFor\n  let-memo\n  [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n  let-i=\"index\"\n>\n  ...\n</ng-template>\n\n<ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n  ...\n  <ion-infinite-scroll></ion-infinite-scroll\n></ion-infinite-scroll>\n```\n\n**ionInfinite**에 주목하세요. ion-infinite-scroll 태그가 화면상에 보일경우 등록해놓은 **doInfinite** 함수를 호출합니다.\n\n```typescript\nimport { AuthManagerProvider } from \"./../../providers/auth-manager/auth-manager\"\nimport { FirebaseListObservable } from \"angularfire2/database\"\nimport { Memo } from \"./../../models/memo/memo.interface\"\nimport { Component, OnInit } from \"@angular/core\"\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  LoadingController,\n  ActionSheetController,\n} from \"ionic-angular\"\n\nimport { MemoCreatePage } from \"./../memo-create/memo-create\"\nimport { MemoDetailPage } from \"./../memo-detail/memo-detail\"\n\nimport { MemoManagerProvider } from \"./../../providers/memo-manager/memo-manager\"\n@IonicPage()\n@Component({\n  selector: \"page-memo-list\",\n  templateUrl: \"memo-list.html\",\n})\nexport class MemoListPage {\n  searchKeyword: string = \"\"\n  viewCount: number = 10\n  memoList: FirebaseListObservable<Memo>\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public loadingCtrl: LoadingController,\n    public actionSheetCtrl: ActionSheetController,\n    public authManager: AuthManagerProvider,\n    public memoManager: MemoManagerProvider\n  ) {}\n\n  ngOnInit() {\n    this.memoList = this.memoManager.getMemoList()\n  }\n\n  doInfinite(infiniteScroll: any) {\n    window.setTimeout(() => {\n      this.viewCount += this.viewCount\n      infiniteScroll.complete()\n    }, 500)\n  }\n\n  filterMemo(memo: Memo): boolean {\n    return (\n      memo.title.includes(this.searchKeyword) ||\n      memo.title.includes(this.searchKeyword)\n    )\n  }\n\n  onClickViewMemoDetail(memo: Memo) {\n    this.navCtrl.push(MemoDetailPage, { memo: memo })\n  }\n\n  onClickCreateMemo() {\n    this.navCtrl.push(MemoCreatePage)\n  }\n\n  onClickMoreOption() {\n    const actionSheet = this.getMoreOptionActionSheet()\n    actionSheet.present()\n  }\n\n  getMoreOptionActionSheet() {\n    return this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: \"Logout\",\n          role: \"destructive\",\n          handler: () => {\n            this.authManager.logoutUser()\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n      ],\n    })\n  }\n}\n```\n\n별거없죠? slice할 viewCount를 증가시켜주고, infiniteScroll 이벤트를 종료합니다.\n\n---\n\n참고 링크\n\n- [해당 포스트에 작성된 모든 코드는 여기에 있습니다!](https://github.com/ddalpange/simple-memo)\n- [해당 프로젝트는 여기서 볼 수 있습니다 !!](https://memo-28314.firebaseapp.com)\n","contentHtml":"<p>이번시간에는 아이오닉에서 제공해주는 무한 스크롤(infinite scroll)을 적용해볼거에요!!</p>\n<h3>테스트 환경 작성</h3>\n<p>테스트케이스 작성을 위해서 아래 코드를 <strong>메모리스트</strong> 페이지의 <strong>ngOnInit</strong> 생명주기 메서드의 아래의 코드를 작성한 후 새로고침해주세요.</p>\n<pre><code>for (let i = 0; i &#x3C; 5000; i++) {\n  this.memoManager.createMemo(`제목${i.toString()}`, `내용${i.toString}`)\n}\n</code></pre>\n<p>5000개가 넘어가면 메모리스트 페이지가 많이 느려지는걸 볼 수 있습니다.\n텍스트만 있어도 느린데 이미지가 있는 페이지라면 어느정도일지 짐작이 되시겠죠?</p>\n<h3>코드 작성</h3>\n<pre><code>&#x3C;ion-header>\n  &#x3C;ion-navbar color=\"primary\">\n    &#x3C;ion-searchbar [(ngModel)]=\"searchKeyword\">&#x3C;/ion-searchbar>\n    &#x3C;ion-buttons end>\n      &#x3C;button ion-button icon-only (click)=\"onClickMoreOption()\">\n        &#x3C;ion-icon name=\"more\"> &#x3C;/ion-icon>\n      &#x3C;/button>\n    &#x3C;/ion-buttons>\n  &#x3C;/ion-navbar>\n&#x3C;/ion-header>\n&#x3C;ion-content>\n  &#x3C;ng-template\n    ngFor\n    let-memo\n    [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n    let-i=\"index\"\n  >\n    &#x3C;ion-card (click)=\"onClickViewMemoDetail(memo)\" *ngIf=\"filterMemo(memo)\">\n      &#x3C;ion-card-header> {{ memo.title }} &#x3C;/ion-card-header>\n      &#x3C;ion-card-content> {{ memo.contents }} &#x3C;/ion-card-content>\n    &#x3C;/ion-card>\n  &#x3C;/ng-template>\n  &#x3C;ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n    &#x3C;ion-infinite-scroll-content\n      loadingSpinner=\"bubbles\"\n      loadingText=\"please waite...\"\n    >&#x3C;/ion-infinite-scroll-content>\n  &#x3C;/ion-infinite-scroll>\n  &#x3C;ion-fab right bottom>\n    &#x3C;button ion-fab icon-only (click)=\"onClickCreateMemo()\">\n      &#x3C;ion-icon name=\"add\" big>&#x3C;/ion-icon>\n    &#x3C;/button>\n  &#x3C;/ion-fab>\n&#x3C;/ion-content>\n</code></pre>\n<p>전체 코드입니다.</p>\n<pre><code>&#x3C;ng-template\n  ngFor\n  let-memo\n  [ngForOf]=\"memoList | async | slice : 0 : viewCount\"\n  let-i=\"index\"\n>\n  ...\n&#x3C;/ng-template>\n\n&#x3C;ion-infinite-scroll (ionInfinite)=\"doInfinite($event)\">\n  ...\n  &#x3C;ion-infinite-scroll>&#x3C;/ion-infinite-scroll\n>&#x3C;/ion-infinite-scroll>\n</code></pre>\n<p><strong>ionInfinite</strong>에 주목하세요. ion-infinite-scroll 태그가 화면상에 보일경우 등록해놓은 <strong>doInfinite</strong> 함수를 호출합니다.</p>\n<pre><code>import { AuthManagerProvider } from \"./../../providers/auth-manager/auth-manager\"\nimport { FirebaseListObservable } from \"angularfire2/database\"\nimport { Memo } from \"./../../models/memo/memo.interface\"\nimport { Component, OnInit } from \"@angular/core\"\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  LoadingController,\n  ActionSheetController,\n} from \"ionic-angular\"\n\nimport { MemoCreatePage } from \"./../memo-create/memo-create\"\nimport { MemoDetailPage } from \"./../memo-detail/memo-detail\"\n\nimport { MemoManagerProvider } from \"./../../providers/memo-manager/memo-manager\"\n@IonicPage()\n@Component({\n  selector: \"page-memo-list\",\n  templateUrl: \"memo-list.html\",\n})\nexport class MemoListPage {\n  searchKeyword: string = \"\"\n  viewCount: number = 10\n  memoList: FirebaseListObservable&#x3C;Memo>\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public loadingCtrl: LoadingController,\n    public actionSheetCtrl: ActionSheetController,\n    public authManager: AuthManagerProvider,\n    public memoManager: MemoManagerProvider\n  ) {}\n\n  ngOnInit() {\n    this.memoList = this.memoManager.getMemoList()\n  }\n\n  doInfinite(infiniteScroll: any) {\n    window.setTimeout(() => {\n      this.viewCount += this.viewCount\n      infiniteScroll.complete()\n    }, 500)\n  }\n\n  filterMemo(memo: Memo): boolean {\n    return (\n      memo.title.includes(this.searchKeyword) ||\n      memo.title.includes(this.searchKeyword)\n    )\n  }\n\n  onClickViewMemoDetail(memo: Memo) {\n    this.navCtrl.push(MemoDetailPage, { memo: memo })\n  }\n\n  onClickCreateMemo() {\n    this.navCtrl.push(MemoCreatePage)\n  }\n\n  onClickMoreOption() {\n    const actionSheet = this.getMoreOptionActionSheet()\n    actionSheet.present()\n  }\n\n  getMoreOptionActionSheet() {\n    return this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: \"Logout\",\n          role: \"destructive\",\n          handler: () => {\n            this.authManager.logoutUser()\n          },\n        },\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n      ],\n    })\n  }\n}\n</code></pre>\n<p>별거없죠? slice할 viewCount를 증가시켜주고, infiniteScroll 이벤트를 종료합니다.</p>\n<hr>\n<p>참고 링크</p>\n<ul>\n<li><a href=\"https://github.com/ddalpange/simple-memo\">해당 포스트에 작성된 모든 코드는 여기에 있습니다!</a></li>\n<li><a href=\"https://memo-28314.firebaseapp.com\">해당 프로젝트는 여기서 볼 수 있습니다 !!</a></li>\n</ul>\n","summary":"<p>이번시간에는 아이오닉에서 제공해주는 무한 스크롤(infinite scroll)을 적용해볼거에요!!</p>\n","slug":"2017-10-03-project-make-simple-memo-6","link":"/blog/2017-10-03-project-make-simple-memo-6"}}]]}]
