{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-11-21-how-to-unsubscibe-in-rxjs/",
    "result": {"data":{"site":{"siteMetadata":{"title":"YH.K Logs"}},"markdownRemark":{"id":"bce0368b-3182-5787-ad16-1311e78066f1","excerpt":"Angular는 기본적으로 RxJS를 사용합니다. RxJS를 사용할때 스트림을 연 컴포넌트가 없어진다 해도 열린 스트림은 닫히지 않기 때문에 메모리를 계속 먹습니다. 그렇기 때문에 Unsubscribe를 호출하여 스트림을 닫아주어야하는데요. 매번 Unsubscribe…","html":"<p><strong>Angular</strong>는 기본적으로 <strong>RxJS</strong>를 사용합니다. <strong>RxJS</strong>를 사용할때 스트림을 연 컴포넌트가 없어진다 해도 열린 스트림은 닫히지 않기 때문에 메모리를 계속 먹습니다. 그렇기 때문에 <strong>Unsubscribe</strong>를 호출하여 스트림을 닫아주어야하는데요. 매번 <strong>Unsubscribe</strong>를 하기는 너무나 귀찮음으로 스트림 구독을 해제할 수 있는 다양한 방법을 소개합니다.\n참고로 <strong>HttpClient</strong>, <strong>Router</strong> 등 앵귤러 내부에서 제공하는 기능들은 따로 <strong>Unsubscribe</strong>를 하지 않아도 자동으로 구독을 해제합니다.</p>\n<!-- more -->\n<h2>Async Pipe</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"htmlsome-component.html\"><pre class=\"language-htmlsome-component.html\"><code class=\"language-htmlsome-component.html\">&lt;ng-container *ngIf=&quot;list$ | async as list; else loadingTemplate&quot;&gt;\n  &lt;app-table [list]=&quot;list&quot; [keys]=&quot;keys&quot;&gt;&lt;/app-table&gt;\n&lt;/ng-container&gt;</code></pre></div>\n<p><strong>Angular</strong> 에서 제공하는 <strong>Async</strong> pipe를 사용하는 방법입니다.\n<strong>Async</strong> pipe가 알아서 Observable을 구독하고 해지하기 때문에 사용자는 별도로 신경써줄 필요가 없죠. 다만 이 방법은 두가지의 문제가 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">tap</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>첫번째로 스크립트내에서 데이터를 쓰기가 귀찮습니다. html에서 event를 통해서 받거나, 아니면 tap operator를 이용해 후킹하여 데이터를 저장해야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"htmlsome-component.html\"><pre class=\"language-htmlsome-component.html\"><code class=\"language-htmlsome-component.html\">&lt;section&gt;\n  &lt;ng-container *ngIf=&quot;list$ | async as list; else loadingTemplate&quot;&gt;\n    &lt;app-table [list]=&quot;list&quot; [keys]=&quot;keys&quot;&gt;&lt;/app-table&gt;\n  &lt;/ng-container&gt;\n&lt;/section&gt;\n&lt;footer class=&quot;another&quot;&gt;\n  &lt;!-- Error --&gt;\n  &lt;pre [innerHTML]=&quot;list | json&quot;&gt;&lt;/pre&gt;\n&lt;/footer&gt;</code></pre></div>\n<p>list를 선언한 안쪽이 아닌 바깥쪽에서는 list에 접근할 수가 없습니다.\nasync pipe를 여러번 사용하면 api 요청도 여러번 날라가기 때문에 미리 마크업 구조를 잡고 가야합니다.</p>\n<h2>TakeUntill</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span><span class=\"token punctuation\">,</span> OnDestroy <span class=\"token punctuation\">{</span>\n  list<span class=\"token operator\">:</span> Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> unsubscribe$ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Subject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">takeUntill</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>unsubscribe$<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> list\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">ngOnDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>unsubscribe$<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>unsubscribe$<span class=\"token punctuation\">.</span><span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>인자로 넣어준 Observable (Subject)가 값을 방출하거나 종료할 경우 구독을 해제합니다.</p>\n<h2>TakeWhile</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span><span class=\"token punctuation\">,</span> OnDestroy <span class=\"token punctuation\">{</span>\n  list<span class=\"token operator\">:</span> Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">private</span> subscribing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">takeWhile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subscribing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> list\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">ngOnDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subscribing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>인자로 넣어준 Boolean 값이 false일 경우 구독이 일어나지 않습니다.</p>\n<h2>Take</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token operator\">:</span> Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> list\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>인자로 넣어준 숫자만큼 <strong>publish</strong>가 일어나면 구독을 종료합니다.</p>\n<h2>First</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token operator\">:</span> Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  list$<span class=\"token operator\">:</span> Observable<span class=\"token operator\">&lt;</span>Item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list$ <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>api\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> list\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>첫번째 구독만 받는 operator입니다.\n인자로 expression을 넘겨줄 수 있습니다.</p>\n<p>이 밖에도 효율적인 <strong>Unsubscribe</strong> 방법이 있다면 알려주세요 !!</p>\n<!--stackedit_data:\neyJoaXN0b3J5IjpbLTYxOTU5MjM0MywxNjEwNTEzMzc5XX0=\n-->","frontmatter":{"title":"Rxjs 구독을 취소하는 여러가지 방법","date":"November 21, 2018","description":null}},"previous":{"fields":{"slug":"/2018-11-17-hexo-travis-stackedit/"},"frontmatter":{"title":"블로깅을 편하게 하기 위한 발악 (hexo, travis, stackedit)"}},"next":{"fields":{"slug":"/2018-12-11-hexo-clipboard/"},"frontmatter":{"title":"Hexo에서 Code Copy (Clipboard) 버튼 만들기"}}},"pageContext":{"id":"bce0368b-3182-5787-ad16-1311e78066f1","previousPostId":"11936248-4fef-5537-a7ea-d8e77a62a5e9","nextPostId":"30191b74-7685-58f2-a7a1-ddeeb10ed1c4"}},
    "staticQueryHashes": ["230163734","2841359383"]}